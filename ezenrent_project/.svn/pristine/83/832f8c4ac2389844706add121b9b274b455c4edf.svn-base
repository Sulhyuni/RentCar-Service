package com.ezenrent.member.controller;

import com.ezenrent.car.controller.CarController;
import com.ezenrent.main.Execute;
import com.ezenrent.main.Main;
import com.ezenrent.member.service.MemberFindIdServiceImpl;
import com.ezenrent.member.service.MemberFindPwServiceImpl;
import com.ezenrent.member.service.MemberLoginServiceImpl;
import com.ezenrent.member.service.MemberUpdatePwServiceImpl;
import com.ezenrent.member.service.MemberUpdateServiceImpl;
import com.ezenrent.member.service.MemberViewPwServiceImpl;
import com.ezenrent.member.service.MemberViewServiceImpl;
import com.ezenrent.member.service.MemberWakeUpServiceImpl;
import com.ezenrent.member.service.MemberWriteServiceImpl;
import com.ezenrent.member.vo.LoginVO;
import com.ezenrent.member.vo.MemberVO;
import com.ezenrent.notice.controller.NoticeController;
import com.ezenrent.rent.controller.RentController;
import com.ezenrent.rent.service.RentMyViewServiceImpl;
import com.ezenrent.rent.vo.RentVO;
import com.ezenrent.review.controller.ReviewController;
import com.ezenrent.util.io.In;
import com.ezenrent.util.io.MemberPrint;
import com.ezenrent.util.io.Out;
import com.ezenrent.util.io.RentPrint;

public class LoginController {
	public void execute() {
		while(true) {
			try {
				if(Main.login == null) {
					Out.title("=", 16, "My 메뉴");
					System.out.println(" 1.로그인 2.회원가입 3.아이디찾기 4.비밀번호찾기 0.이전메뉴");
					Out.line("=", 45);
					
				} else if (Main.login.getGradeNo() == 1) {
					Out.title("=", 10, "My 메뉴");
					System.out.println(" 1.로그아웃 2.내정보보기 3.내정보변경 4.비밀번호변경");
					System.out.println(" 5.대여내역 6.회원탈퇴 0.이전메뉴");
					Out.line("=", 30);	
					
				} else if (Main.login.getGradeNo() == 9) {
					Out.title("=", 15, "관리자 메뉴");
					System.out.println(" 1.로그아웃 2.내정보보기 3.내정보변경 0.이전메뉴");
					System.out.println(" 4.공지사항관리 5.차량관리 6.대여관리 7.리뷰관리 8.회원관리");
					Out.line("=", 50);					
					
				}
				
				// 비회원 My메뉴
				if(Main.login == null) {
					switch(In.getString("원하시는 항목의 번호를 선택 해 주세요")) {
					case "1": // 로그인
						LoginVO vo = new LoginVO();
						System.out.println();
						vo.setId(In.getString("아이디"));
						vo.setPw(In.getString("비밀번호"));
						LoginVO loginVO = 
						(LoginVO) Execute.run(new MemberLoginServiceImpl(), new Object[] {vo.getId(),vo.getPw(), 1});
						if(loginVO == null) {
							System.out.println("\n ■ 입력하신 정보가 없습니다.");
							System.out.println(" ■ 아이디나 비밀번호를 다시 확인 해 주세요.");
						} else if(loginVO.getStatus().equals("강퇴")) {
							System.out.println("\n ■ 관리자에 의해 강제 탈퇴된 회원으로 로그인 할 수 없습니다.");
							System.out.println(" ■ 로그인을 원하시면 admin@naver.com 으로 문의 바랍니다.");
						} else if(loginVO.getStatus().equals("탈퇴")) {
							System.out.println("\n ■ 탈퇴한 회원으로 로그인 할 수 없습니다.");
							System.out.println(" ■ 로그인을 원하시면 회원가입 후 이용 해 주세요.");						
						} else if(loginVO.getStatus().equals("휴면")){
							System.out.println("\n ■ 장기간 미접속으로 인해 휴면계정으로 전환된 회원입니다.");
							System.out.println(" ■ 로그인을 원하시면 가입시 입력 한 정보를 입력 해 주세요.");	
							MemberVO wakeUpVO = new MemberVO();
							wakeUpVO.setId(In.getString(" ■ 아이디"));
							wakeUpVO.setName(In.getString(" ■ 이름"));
							wakeUpVO.setPw(In.getString(" ■ 비밀번호"));
							wakeUpVO = (MemberVO) Execute.run(new MemberViewServiceImpl(), wakeUpVO.getId());
							int result = (int)Execute.run(new MemberWakeUpServiceImpl(), wakeUpVO);
							if (result == 1) {
								System.out.println("\n ■ 휴면 해제 되었습니다. 다시 로그인 해 주세요.");
							} else {
								System.out.println("\n ** 휴면 해제가 되지 않았습니다. 입력 정보를 다시 한 번 확인 해 주세요.");
							}
						} else {
							Main.login = loginVO;
							System.out.println("\n  ■ "+ loginVO.getName()+"님! 환영합니다.");
							System.out.println("  ■ "+ loginVO.getGradeName()+" 권한으로 로그인 되었습니다.");
						}
						break;
					case "2": // 회원가입
						MemberVO writeVO = new MemberVO();
						MemberController join = new MemberController();
						join.writeVO(writeVO);
						int result = (int) Execute.run(new MemberWriteServiceImpl(), writeVO);
						if(result == 1) {
							System.out.println("\n ■ "+writeVO.getId()+"님, 환영합니다! 로그인 후 이용 해 주세요.");
						} else {
							System.out.println("\n ■ 가입이 되지 않았습니다.");
							System.out.println(" ■ 누락된 항목이 있거나, 형식에 맞게 입력 하였는지 다시 한 번 확인 해 주세요.");
						}
						break;
					case "3": // 아이디찾기
						LoginVO findIdVO = new LoginVO();
						System.out.println("\n ■ 가입 시 입력한 정보로 아이디를 찾을 수 있습니다.");
						String name = In.getString(" ■ 이름");
						findIdVO.setName(name);
						findIdVO.setEmail(In.getString(" ■ 이메일"));
						findIdVO = (LoginVO) Execute.run(new MemberFindIdServiceImpl(), findIdVO);
						System.out.println("\n ■ "+name+"님의 아이디는 [" + findIdVO.getId()+ "] 입니다.");
						break;
					case "4": // 비밀번호 찾기
						MemberVO findPwVO = new MemberVO();
						System.out.println("\n ■ 가입 시 입력한 정보로 비밀번호를 찾을 수 있습니다.");
						String id = In.getString("아이디");
						name = In.getString("이름");
						String email = In.getString("이메일");
						findPwVO.setId(id);
						findPwVO.setName(name);
						findPwVO.setEmail(email);
						findPwVO = (MemberVO) Execute.run(new MemberFindPwServiceImpl(), findPwVO);
						findPwVO.setId(id);
						findPwVO.setPw("1234");
						result = (int) Execute.run(new MemberUpdatePwServiceImpl(), findPwVO);
						System.out.println();
						Out.line("=", 30);
						System.out.println(" ■ 임시 비밀번호가 발급 되었습니다.");
						System.out.println(" ■ 로그인 후, 비밀번호를 변경하시길 바랍니다.");
						System.out.println(" ■ 임시 비밀번호 [ " + findPwVO.getPw() +" ]");
						Out.line("=", 30);
						break;
					case "0": // 이전메뉴
						return;
					default :
						System.out.println("\n ■ 잘못 입력 하셨습니다.     ");
						System.out.println(" ■ 1~4번, 0번중에 선택 해 주세요. ");
					} // end of switch
				
					// 일반회원 My메뉴
					// 1.로그아웃 2.내정보보기 3.내정보수정 4.비밀번호변경 5.대여내역 6.회원탈퇴 0.이전메뉴
				} else if (Main.login.getGradeNo() == 1) {
					 switch(In.getString("원하시는 항목의 번호를 선택 해 주세요")) {
					 case "1": //로그아웃
						 Main.login = null;
						 System.out.println("\n ■ 로그아웃 되었습니다.");
						 break;
					 case "2": // 내정보보기 - id:test
						 MemberVO viewVO = new MemberVO();
						 String str = Main.login.getId(); // str = test;
						 viewVO.setId(str);
						 viewVO = (MemberVO) Execute.run(new MemberViewServiceImpl(), str);
						 MemberPrint.print(viewVO);
						 break;
					 case "3": // 내정보수정
						 MemberVO updateVO = new MemberVO();
						 str = Main.login.getId();
						 updateVO = (MemberVO) Execute.run(new MemberViewServiceImpl(), str);
						 MemberPrint.print(updateVO);
						 MemberController edit = new MemberController();
						 edit.updateVO(updateVO);
						 int result = (Integer) Execute.run(new MemberUpdateServiceImpl(), updateVO);
						 if (result == 1) {
							 System.out.println("\n ■ 수정이 되었습니다.");
						 } else {
							 System.out.println("\n ** 수정이 되지 않았습니다.");
						 }
						 break;
					 case "4": // 비밀번호 변경
						 MemberVO updatePwVO = new MemberVO();
						 String id = Main.login.getId();
						 updatePwVO = (MemberVO) Execute.run(new MemberViewPwServiceImpl(), id);
						 System.out.println("\n ■ 비밀번호를 변경하시려면 기존 비밀번호를 입력 해 주세요.");
						 String inPw = In.getString(" ■ 기존 비밀번호");
						 if(inPw.equals(updatePwVO.getPw())) {
							updatePwVO.setId(id);
							updatePwVO.setPw(In.getString(" ■ 새로운 비밀번호"));
							result = (int) Execute.run(new MemberUpdatePwServiceImpl(), updatePwVO);
							if(result == 1) {
								System.out.println("\n ■ 비밀번호가 변경 되었습니다.");
							} else {
								System.out.println("\n ** 비밀번호가 변경되지 않았습니다. 다시 시도 해 주세요.");
							}
						 } else {
							 System.out.println("\n ** 비밀번호를 다시 한 번 확인 해 주세요.");
						 }
						 break;
					 case "5": // 대여내역
						 RentVO rentVO = new RentVO();
						 rentVO = (RentVO) Execute.run(new RentMyViewServiceImpl(), Main.login.getId());
						 RentPrint.print(rentVO);
						 break;
					 case "6": // 회원탈퇴
						 MemberVO resignVO = new MemberVO();
						 id = Main.login.getId();
						 inPw = In.getString("\n탈퇴를 원하시면 비밀번호를 입력 해 주세요.");
						 resignVO = (MemberVO) Execute.run(new MemberViewPwServiceImpl(), id);
						 if(inPw.equals(resignVO.getPw())) {
							 resignVO = (MemberVO) Execute.run(new MemberViewServiceImpl(), id);
							 resignVO.setStatus("탈퇴");
							 Execute.run(new MemberUpdateServiceImpl(), resignVO);
							 System.out.println("\n ■ 정상적으로 탈퇴가 되었습니다. 로그아웃 합니다.");
							 Main.login = null;
							 return;
						 } else {
							 System.out.println("\n ** 탈퇴가 되지 않았습니다. 비밀번호를 확인 해 주세요.");
						 }
						 break;
					 case "0": // 이전메뉴
						 return;
					 default :
							System.out.println("\n■ 잘못 입력 하셨습니다.     ");
							System.out.println("■ 1~6번, 0번중에 선택 해 주세요. ");
					 } // end of switch
					
					// 관리자 메뉴
					// 1.로그아웃 2.내정보보기 3.내정보수정 0.이전메뉴
					// 4.공지사항관리 5.차량관리 6.대여관리 7.리뷰관리 8.회원관리
				} else if  (Main.login.getGradeNo() == 9) {
					switch(In.getString("원하시는 항목의 번호를 선택 해 주세요")) {
					 case "1": // 로그아웃
						 Main.login = null;
						 System.out.println("\n** 로그아웃 되었습니다.");
						 break;
					 case "2": // 내정보보기
						 MemberVO viewVO = new MemberVO();
						 String str = Main.login.getId();
						 viewVO.setId(str);
						 viewVO = (MemberVO) Execute.run(new MemberViewServiceImpl(), str);
						 MemberPrint.print(viewVO);
						 break;
					 case "3": // 내정보수정
						 MemberVO updateVO = new MemberVO();
						 str = Main.login.getId();
						 updateVO.setId(str);
						 updateVO = (MemberVO) Execute.run(new MemberViewServiceImpl(), str);
						 MemberPrint.print(updateVO);
						 MemberController edit = new MemberController();
						 edit.updateVO(updateVO);
						 int result = (Integer) Execute.run(new MemberUpdateServiceImpl(), updateVO);
						 if (result == 1) {
							 System.out.println("\n 수정이 되었습니다.");
						 } else {
							 System.out.println("\n 수정이 되지 않았습니다.");
						 }
						 break;
					 case "4": // 공지사항관리
						 NoticeController noticeController = new NoticeController();
						 noticeController.execute();
						 break;
					 case "5": // 차량관리
						 CarController carController = new CarController();
						 carController.execute();
						 break;
					 case "6": // 대여관리
						 RentController rentController = new RentController();
						 rentController.execute();
						 break;
					 case "7": // 리뷰관리
						 ReviewController reviewController = new ReviewController();
						 reviewController.execute();
						 break;
					 case "8": // 회원관리
						 MemberController memberController = new MemberController();
						 memberController.execute();
						 break;
					 case "0": // 이전메뉴
						 return;
					 default :
							System.out.println("\n■ 잘못 입력 하셨습니다.     ");
							System.out.println("■ 1~6번, 0번중에 선택 해 주세요. ");
					 } // end of switch()
				} // end of if
				
			} catch (Exception e) {
				e.printStackTrace();
			} // end of try~catch
		} // end of while
	} // end of execute
} // end of class
