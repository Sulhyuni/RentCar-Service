package com.ezenrent.rent.controller;

 
import java.util.List;

import com.ezenrent.main.Execute;
import com.ezenrent.main.Main;
import com.ezenrent.rent.service.RentListServiceImpl;
import com.ezenrent.rent.vo.RentVO;
import com.ezenrent.util.io.In;
import com.ezenrent.util.io.Out;
import com.ezenrent.util.io.RentPrint;

public class RentController {
	 
	@SuppressWarnings("unchecked")
	public void execute() {
		// 무한루프
		while (true) {
			try {

				// 메뉴출력				
				Out.title("=", 13, "대여하기");
				System.out.println("1.대여리스트 2.대여상세내역 3.예약하기 " 
				+ " 4.예약수정,추가운전자 등록  5.반납&취소하기  0.이전메뉴");
				 
				// 메뉴입력/처리
				switch (In.getString("메뉴 입력")) {
				case "1":
					//대여리스트
					//일반회원- 로그인.id와 대여.id 동일한 리스트만 불러온다.
					//login.id,member.id
					
					//관리자- 모든리스트(모든회원,대여가능리스트)를 볼 수 있다.
					//gradeNo ==9
					Object result = Execute.run(new RentListServiceImpl(), null	);
					RentPrint.print((List<RentVO>)result);
					
					break;
				case "2":
					//대여상세내역
					//대여리스트의 rentNo입력시 대여리스트 컬럼명 + 예약시입력한컬럼 모두 출력한다.
					String strNo = In.getString("볼 차량 번호 -> ");
					RentVO vo = (RentVO) Execute.run(new RentListServiceImpl(), new Object[] {});
					break;
					
				case "3":
					//예약하기 write
					//대여가능 리스트(대여일자 null값)을 불러온다
					//rentNo입력, 대여일자,반납일자
					//3-1 writeVO(writeVO) 
					//보험선택 1.만21세 2.만26세 /1.20만원 2.30만원 3.50만원 선택 후 db저장
					//*보험은 선택하는걸로 할지, 30만원 고정값 넣을지 추후 결정하기로 함.
					break;
				case "4":
					System.out.println("1.대여일 2.반납일 3.운전자 등록 0.완료");
					//예약수정,추가운전자등록 update
					//대여일,반납일수정, 추가운전자등록
					//추가운전자(이름,생년월일, 면허번호 )정보 입력
					//4.추가운전자 수정 -- 
					
					
					break;
				case "5":
					//예약 취소
					//취소,반납 할 회원 대여리스트의 rentNo 입력
					// 비밀번호 입력 후 취소, 반납
					//취소,반납시 회원 정보만 삭제처리.*리스트의 모든 차량정보가 삭제되면 안됨.
					
					break;
				case "0":
					//이전메뉴
					System.out.println("이전메뉴로 돌아갑니다.");
					
					return;

				default:
					System.out.println("잘못된 메뉴 입력");
					System.out.println("다시 입력 해주세요.");
					break;
					
				}//end of switch

			} catch (Exception e) {
				e.printStackTrace();
			} // end of try~catch

		} // end of while
	}// end of execute

}// end of class
